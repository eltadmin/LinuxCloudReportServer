version: '3.8'

services:
  go_tcp_server:
    build:
      context: .
      dockerfile: Dockerfile.go
    ports:
      - "8016:8016"  # TCP server
    environment:
      - TCP_HOST=0.0.0.0
      - TCP_PORT=8016
      - SERVER_DEBUG=true  # Added for debugging
      - TZ=${TZ:-Europe/Sofia}  # Set timezone from host or default to Sofia
      - SERVER_KEY=${SERVER_KEY:-D5F2}  # Server key from env or default
      - USE_FIXED_DEBUG_KEY=true
    volumes:
      - ./keys:/app/keys  # Volume for storing server keys
      - /etc/timezone:/etc/timezone:ro  # Sync timezone with host
      - /etc/localtime:/etc/localtime:ro  # Sync timezone with host
    depends_on:
      db:
        condition: service_healthy
      web:
        condition: service_started
    restart: unless-stopped

#  report_server:
#    build:
#      context: .
#      dockerfile: Dockerfile.server
#    ports:
#      - "8080:8080"  # HTTP server only (TCP handled by Go server)
#    volumes:
#      - ./server:/app/server
#      - ./config:/config
#      - ./logs:/app/logs
#      - ./Updates:/app/updates
#    environment:
#      - DB_HOST=db
#      - DB_USER=dreports
#      - DB_PASSWORD=dreports
#      - DB_NAME=dreports
#      - AUTH_SERVER_URL=http://web:8015/dreport/api.php
#      - PYTHONPATH=/app
#      - INIT_RESPONSE_FORMAT=${INIT_RESPONSE_FORMAT:-1}
#      - DISABLE_TCP_SERVER=true  # Disable the Python TCP server
#      - TZ=${TZ:-Europe/Sofia}
#    depends_on:
#      db:
#        condition: service_healthy
#      web:
#        condition: service_started

#  proxy_server:
#    build:
#      context: .
#      dockerfile: Dockerfile.server
#    ports:
#      - "8017:8017"  # Proxy server port
#    volumes:
#      - ./server:/app/server
#      - ./:/app
#    command: python3 /app/tcp_proxy.py ${TARGET_HOST:-127.0.0.1} ${TARGET_PORT:-8016} 0.0.0.0 8017
#    environment:
#      - PYTHONPATH=/app
#      - TZ=${TZ:-Europe/Sofia}
#    depends_on:
#      - go_tcp_server

  web:
    build:
      context: .
      dockerfile: Dockerfile.php
    ports:
      - "8015:8015"
    volumes:
      - ./dreport:/var/www/html/dreport
      - php_vendor:/var/www/html/dreport/protected/slim/vendor
      - /etc/timezone:/etc/timezone:ro  # Sync timezone with host
      - /etc/localtime:/etc/localtime:ro  # Sync timezone with host
    environment:
      - DB_HOST=db
      - DB_USER=dreports
      - DB_PASSWORD=dreports
      - DB_NAME=dreports
      - MYSQL_HOST=db
      - MYSQL_USER=dreports
      - MYSQL_PASSWORD=dreports
      - MYSQL_DATABASE=dreports
      - TZ=${TZ:-Europe/Sofia}  # Set timezone from host or default to Sofia
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  db:
    image: mysql:8.0
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./dreports(8).sql:/docker-entrypoint-initdb.d/init.sql
      - /etc/timezone:/etc/timezone:ro  # Sync timezone with host
      - /etc/localtime:/etc/localtime:ro  # Sync timezone with host
    environment:
      - MYSQL_DATABASE=dreports
      - MYSQL_USER=dreports
      - MYSQL_PASSWORD=dreports
      - MYSQL_ROOT_PASSWORD=rootpass
      - TZ=${TZ:-Europe/Sofia}  # Set timezone from host or default to Sofia
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  reportcom-server:
    build:
      context: .
      dockerfile: Dockerfile
    image: reportcom-server:latest
    container_name: reportcom-server
    restart: unless-stopped
    ports:
      - "8016:8016"  # TCP server port
      - "8015:8015"  # HTTP server port
    volumes:
      - ./config:/app/config
      - ./logs:/app/logs
      - ./updates:/app/updates
    environment:
      - TZ=Europe/Sofia
    networks:
      - reportcom-network

volumes:
  mysql_data:
  php_vendor:

networks:
  reportcom-network:
    driver: bridge 