version: '3.8'

services:
  db:
    build:
      context: .
      dockerfile: Dockerfile.mysql
    container_name: ebo-report-db
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=dreports
      - MYSQL_USER=dreports
      - MYSQL_PASSWORD=ftUk58_HoRs3sAzz8jk
      - MYSQL_ROOT_PASSWORD=rootpassword
    volumes:
      - mysql-data:/var/lib/mysql
      - ./dreports(8).sql:/docker-entrypoint-initdb.d/dreports.sql
    ports:
      - "3306:3306"
    networks:
      - report-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u$$MYSQL_USER", "-p$$MYSQL_PASSWORD"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    command: --innodb-buffer-pool-size=512M --max-allowed-packet=64M

  report-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ebo-cloud-report-server
    depends_on:
      - db
    ports:
      - "8080:8080"  # HTTP port
      - "8016:8016"  # TCP port
    volumes:
      - ./logs:/app/logs
      - ./Updates:/app/Updates
      - ./src/eboCloudReportServer.ini:/app/eboCloudReportServer.ini
    environment:
      - NODE_ENV=production
      - DB_HOST=db
      - DB_USER=dreports
      - DB_PASSWORD=ftUk58_HoRs3sAzz8jk
      - DB_NAME=dreports
    restart: unless-stopped
    networks:
      - report-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  web-interface:
    build:
      context: .
      dockerfile: Dockerfile.webinterface
    container_name: ebo-web-interface
    volumes:
      - ./dreport:/var/www/html
    ports:
      - "8015:80"
    restart: unless-stopped
    networks:
      - report-network
    depends_on:
      - report-server
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

# Web interface is available on port 8015
# URL: http://localhost:8015/dreport/

networks:
  report-network:
    driver: bridge

volumes:
  mysql-data: 