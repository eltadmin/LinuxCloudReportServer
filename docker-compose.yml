version: '3.8'

services:
  db:
    image: mysql:8.0
    container_name: ebo-report-db
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=dreports
      - MYSQL_USER=dreports
      - MYSQL_PASSWORD=ftUk58_HoRs3sAzz8jk
      - MYSQL_ROOT_PASSWORD=rootpassword
    volumes:
      - mysql-data:/var/lib/mysql
      - ../dreports(8).sql:/docker-entrypoint-initdb.d/dreports.sql
    ports:
      - "3306:3306"
    networks:
      - report-network

  tcp-server:
    image: node:18-alpine
    container_name: ebo-cloud-tcp-server
    depends_on:
      - db
    ports:
      - "8080:8080"  # HTTP API порт
      - "8016:8016"  # TCP порт
    volumes:
      - ./src:/app
      - ./logs:/app/logs
      - ./Updates:/app/Updates
    environment:
      - NODE_ENV=production
      - DB_HOST=db
      - DB_USER=dreports
      - DB_PASSWORD=ftUk58_HoRs3sAzz8jk
      - DB_NAME=dreports
    restart: unless-stopped
    networks:
      - report-network
    working_dir: /app
    command: >
      sh -c "apk add --no-cache curl &&
             npm install --no-fund fs-extra ini mysql2 express mysql net &&
             node server.js"

  web:
    image: php:8.1-fpm-alpine
    container_name: ebo-web-interface
    depends_on:
      - db
      - tcp-server
    ports:
      - "80:80"
    volumes:
      - ../dreport:/var/www/html/dreport
      - ./nginx.conf:/etc/nginx/http.d/default.conf
    environment:
      - DB_HOST=db
      - DB_USER=dreports
      - DB_PASSWORD=ftUk58_HoRs3sAzz8jk
      - DB_NAME=dreports
    networks:
      - report-network
    restart: unless-stopped
    command: >
      sh -c "apk add --no-cache nginx && 
             docker-php-ext-install pdo pdo_mysql mysqli && 
             mkdir -p /run/nginx && 
             nginx && 
             php-fpm"

# Web interface is available on port 8015
# URL: http://localhost:8015/dreport/

networks:
  report-network:
    driver: bridge

volumes:
  mysql-data: 