version: '3.8'

services:
  app:
    build: .
    container_name: cloud-report-server
    restart: unless-stopped
    ports:
      - "8080:8080"  # HTTP port
      - "2909:2909"  # TCP port
    environment:
      - NODE_ENV=production
      - DB_HOST=database
      - DB_PORT=5432
      - DB_NAME=reportserver
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - JWT_SECRET=replace_with_secure_secret_in_production
    volumes:
      - ./logs:/app/logs
      - ./updates:/app/updates
      - ./config:/app/config
    depends_on:
      - database
    networks:
      - app-network

  database:
    image: postgres:14-alpine
    container_name: cloud-report-db
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=reportserver
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    volumes:
      - grafana-data:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      - prometheus

volumes:
  db-data:
  prometheus-data:
  grafana-data:

networks:
  app-network:
    driver: bridge 