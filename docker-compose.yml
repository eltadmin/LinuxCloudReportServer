version: '3.8'

services:
  go_tcp_server:
    build:
      context: .
      dockerfile: Dockerfile.go
    ports:
      - "8016:8016"  # TCP server
    environment:
      - TCP_HOST=0.0.0.0
      - TCP_PORT=8016
    depends_on:
      db:
        condition: service_healthy
      web:
        condition: service_started

  report_server:
    build:
      context: .
      dockerfile: Dockerfile.server
    ports:
      - "8080:8080"  # HTTP server only (TCP handled by Go server)
    volumes:
      - ./server:/app/server
      - ./config:/config
      - ./logs:/app/logs
      - ./Updates:/app/updates
    environment:
      - DB_HOST=db
      - DB_USER=dreports
      - DB_PASSWORD=dreports
      - DB_NAME=dreports
      - AUTH_SERVER_URL=http://web:8015/dreport/api.php
      - PYTHONPATH=/app
      - INIT_RESPONSE_FORMAT=${INIT_RESPONSE_FORMAT:-1}
      - DISABLE_TCP_SERVER=true  # Disable the Python TCP server
    depends_on:
      db:
        condition: service_healthy
      web:
        condition: service_started

  proxy_server:
    build:
      context: .
      dockerfile: Dockerfile.server
    ports:
      - "8017:8017"  # Proxy server port
    volumes:
      - ./server:/app/server
      - ./:/app
    command: python3 /app/tcp_proxy.py ${TARGET_HOST:-127.0.0.1} ${TARGET_PORT:-8016} 0.0.0.0 8017
    environment:
      - PYTHONPATH=/app
    depends_on:
      - go_tcp_server

  web:
    build:
      context: .
      dockerfile: Dockerfile.php
    ports:
      - "8015:8015"
    volumes:
      - ./dreport:/var/www/html/dreport
      - php_vendor:/var/www/html/dreport/protected/slim/vendor
    environment:
      - DB_HOST=db
      - DB_USER=dreports
      - DB_PASSWORD=dreports
      - DB_NAME=dreports
      - MYSQL_HOST=db
      - MYSQL_USER=dreports
      - MYSQL_PASSWORD=dreports
      - MYSQL_DATABASE=dreports
    depends_on:
      db:
        condition: service_healthy

  db:
    image: mysql:8.0
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./dreports(8).sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - MYSQL_DATABASE=dreports
      - MYSQL_USER=dreports
      - MYSQL_PASSWORD=dreports
      - MYSQL_ROOT_PASSWORD=rootpass
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mysql_data:
  php_vendor: 