version: '3.8'

services:
  app:
    build: .
    container_name: cloud-report-server
    restart: unless-stopped
    ports:
      - "8080:8080"  # HTTP port
      - "2909:2909"  # TCP port
      - "8015:8015"  # dreport web interface port
    environment:
      - NODE_ENV=production
      - DB_HOST=database
      - DB_PORT=5432
      - DB_NAME=reportserver
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - JWT_SECRET=replace_with_secure_secret_in_production
      - DREPORT_DB_HOST=mysql
      - DREPORT_DB_USER=dreports
      - DREPORT_DB_PASSWORD=ftUk58_HoRs3sAzz8jk
      - DREPORT_DB_NAME=dreports
      - RPT_SERVER_HOST=localhost
      - RPT_SERVER_PORT=2909
      - RPT_SERVER_USER=admin
      - RPT_SERVER_PSWD=admin
      - LOG_LEVEL=2
    volumes:
      - ./logs:/app/logs
      - ./updates:/app/updates
      - ./config:/app/config
      - ../dreport:/var/www/html/dreport
    depends_on:
      - database
      - mysql
    networks:
      - app-network

  database:
    image: postgres:14-alpine
    container_name: cloud-report-db
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=reportserver
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    container_name: dreport-db
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=ftUk58_HoRs3sAzz8jk
      - MYSQL_DATABASE=dreports
      - MYSQL_USER=dreports
      - MYSQL_PASSWORD=ftUk58_HoRs3sAzz8jk
    volumes:
      - mysql-data:/var/lib/mysql
      - ./config/dreport_schema.sql:/docker-entrypoint-initdb.d/dreport_schema.sql
    ports:
      - "3306:3306"
    networks:
      - app-network
    command: --default-authentication-plugin=mysql_native_password

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    volumes:
      - grafana-data:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      - prometheus

volumes:
  db-data:
  mysql-data:
  prometheus-data:
  grafana-data:

networks:
  app-network:
    driver: bridge 